<% layout('layouts/boilerplate') %>

        <div class="row">
            <div class="col-md-12">
                <div class="card-shadow">
                    <div class="form-group float-right">
                        <a href="/product/new" class="btn btn-primary">Add Product</a>
                    </div>
                    <div class="containter card-body">
                        <h5 class="card-title">List Product</h5>
                        <div class="table-repsonsive">
                            <table id="table" class="display table">
                                <thead class="thead-light">
                                    <tr class="text-center">
                                        <th style="width: 5%;">No</th>
                                        <th style="width: 20%;">Name</th>
                                        <th style="width: 15%;">Price</th>
                                        <th style="width: 15%;">Total Ingridient</th>
                                        <th style="width: 15%;">Total Cost</th>
                                        <th style="width: 15%;">Total Profit</th>
                                        <th style="width: 10%;">Adjustment</th>
                                        <th style="width: 10%;">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% for(let i = 0; i < products.length; i++ ) { %>
                                        <tr>
                                            <td class="text-center"><%= i+1 %></td>
                                            <td><%= products[i].name %></td>
                                            <td class="text-right"><%= products[i].price.toFixed(2) %></td>
                                            <td class="text-right"><%= products[i].total_ingridient.toFixed(2) %></td>
                                            <td class="text-right"><%= products[i].total_cost.toFixed(2) %></td>
                                            <td class="text-right"><%= products[i].total_profit.toFixed(2) %></td>
                                            <td class="text-right"><%= products[i].adjustment.toFixed(2) %></td>
                                            <td>
                                                <div class="d-flex justify-content-center align-items-center">
                                                    <a href="/product/<%= products[i]._id %>"><i class="fa fa-eye mx-1"></i></a>
                                                    <a href="/product/<%= products[i]._id %>/edit"><i class="fa fa-edit text-warning mx-1"></i></a>
                                                    <form action="/product/<%= products[i]._id %>?_method=DELETE" class="d-inline mx-1" method="POST">
                                                        <button style="border: none;"><i class="fa fa-trash text-danger"></i></button>
                                                    </form>
    
                                                </div>
                                            </td>
                                        </tr>
                                    <% } %> 
                                </tbody>
                            </table>
                        </div>
                    </div>
            </div>
        </div>
    <!-- </div> -->

    <script src="https://js.pusher.com/4.1/pusher.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.16.2/axios.js"></script>
    <script src="/js/product/index.js"></script>
    <!-- <script>
        const dataTable = $('#realtime').DataTable({
            data: dataSet,
            columns: [
                { title: 'Name' },
                { title: 'Position' },
                { title: 'Office' },
            ]
        })

        function buildForm() {
            return [
            $('#name').val(),
            $('#position').val(),
            $('#office').val(),
            $('#extn').val(),
            $('#startDate')
                .val()
                .replace(new RegExp('-', 'g'), '/'),
            `$${$('#salary').val()}`
            ];
        }

        addRow(dataTable) {
            const formData = this.buildForm();
            const addedRow = dataTable.row.add(formData).draw();
            addedRow.show().draw(false);
            const addedRowNode = addedRow.node();
            console.log(addedRowNode);
            $(addedRowNode).addClass('highlight');
        }

        $('#add').on('click', this.addRow.bind(this, dataTable));

        selectRow(dataTable) {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            } else {
                dataTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        }

        removeRow(dataTable) {
            dataTable.row('.selected').remove().draw( false );
        }

        const self = this;
        $('#realtime tbody').on('click', 'tr', function(){
            self.selectRow.bind(this, dataTable)();
            });
        $('#remove').on('click', this.removeRow.bind(this, dataTable));

        sendToServer() {
            const formData = this.buildForm();
            axios.post('http://localhost:2000/record', formData)
            .then(response => console.log(response));
        }

        var pusher = new Pusher('APP-KEY', {
            cluster: 'CLUSTER',
            encrypted: true
        });
    </script> -->
